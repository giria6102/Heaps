 void  heapify(vector<int> &arr,int index, int n){
        int largest=index;
        int leftindex=2*index+1;
        int rightindex=2*index+2;
        if(leftindex<n && arr[leftindex]>arr[largest] ){
            largest=leftindex;
        }
         if(rightindex<n && arr[rightindex]>arr[largest] ){
            largest=rightindex;
        }
        if(largest!=index){
            swap(arr[largest],arr[index]);
            heapify(arr,largest,n);
        }
    }
      vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        // your code here
        // merge both the array
        vector<int> c;
        for(int i=0;i<a.size();i++){
            c.push_back(a[i]);
        }
         for(int i=0;i<b.size();i++){
            c.push_back(b[i]);
        }
        // convert array into heapify 
        int s=c.size();
        for(int i=(s/2)-1;i>=0;i--){
            heapify(c,i,s);
        }
        
        return c;
    }
